name: NovaAid CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Tests
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: BACKEND/novaaid-app-backend/package-lock.json
      
      - name: Install dependencies
        working-directory: BACKEND/novaaid-app-backend
        run: npm ci
      
      - name: Run tests
        working-directory: BACKEND/novaaid-app-backend
        run: npm test
        env:
          CI: true
      
      - name: Check for vulnerabilities
        working-directory: BACKEND/novaaid-app-backend
        run: npm audit --audit-level=high

  # Smart Contract Tests
  contracts-test:
    name: Smart Contract Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: BLOCKCHAIN/novaaid-app-blockchain/package-lock.json
      
      - name: Install dependencies
        working-directory: BLOCKCHAIN/novaaid-app-blockchain
        run: npm ci
      
      - name: Compile contracts
        working-directory: BLOCKCHAIN/novaaid-app-blockchain
        run: npx hardhat compile
      
      - name: Run tests
        working-directory: BLOCKCHAIN/novaaid-app-blockchain
        run: npm test
        env:
          CI: true
      
      - name: Generate coverage report
        working-directory: BLOCKCHAIN/novaaid-app-blockchain
        run: npx hardhat coverage
        continue-on-error: true

  # Frontend Tests - Refugee Portal
  frontend-refugee-test:
    name: Refugee Portal Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: FRONTEND/novaaid-app/package-lock.json
      
      - name: Install dependencies
        working-directory: FRONTEND/novaaid-app
        run: npm ci
      
      - name: Build project
        working-directory: FRONTEND/novaaid-app
        run: npm run build
        env:
          CI: true
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          NEXT_PUBLIC_BACKEND_URL: http://localhost:3001
          NEXT_PUBLIC_CONTRACT_ADDRESS: "0x8a3a92E1207de2eBA6EF3AB14d2e02b93A6884c5"
      
      - name: Run tests
        working-directory: FRONTEND/novaaid-app
        run: npm test
        env:
          CI: true
        continue-on-error: true
      
      - name: Check for vulnerabilities
        working-directory: FRONTEND/novaaid-app
        run: npm audit --audit-level=high

  # Frontend Tests - NGO Portal
  frontend-ngo-test:
    name: NGO Portal Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: FRONTEND/NGO SECTION/ngo-portal/package-lock.json
      
      - name: Install dependencies
        working-directory: FRONTEND/NGO SECTION/ngo-portal
        run: npm ci
      
      - name: Build project
        working-directory: FRONTEND/NGO SECTION/ngo-portal
        run: npm run build
        env:
          CI: true
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          NEXT_PUBLIC_BACKEND_URL: http://localhost:3001
          NEXT_PUBLIC_CONTRACT_ADDRESS: "0x8a3a92E1207de2eBA6EF3AB14d2e02b93A6884c5"
      
      - name: Run tests
        working-directory: FRONTEND/NGO SECTION/ngo-portal
        run: npm test
        env:
          CI: true
        continue-on-error: true
      
      - name: Check for vulnerabilities
        working-directory: FRONTEND/NGO SECTION/ngo-portal
        run: npm audit --audit-level=high

  # Linting and Code Quality
  lint:
    name: Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Lint Backend
        working-directory: BACKEND/novaaid-app-backend
        run: |
          npm ci
          npm run lint || echo "Linting not configured"
        continue-on-error: true
      
      - name: Lint Smart Contracts
        working-directory: BLOCKCHAIN/novaaid-app-blockchain
        run: |
          npm ci
          npx solhint 'contracts/**/*.sol' || echo "Solhint not configured"
        continue-on-error: true

  # Security Check
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true

  # All tests passed
  all-tests-passed:
    name: All Tests Passed
    runs-on: ubuntu-latest
    needs: [backend-test, contracts-test, frontend-refugee-test, frontend-ngo-test, lint]
    
    steps:
      - name: Success
        run: echo "All tests passed! ðŸŽ‰"
